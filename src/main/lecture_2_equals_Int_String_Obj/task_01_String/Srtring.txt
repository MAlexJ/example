1. new String("") vs ""
Когда используется new(), строка сразу добавляется в heap и НЕ добавляется в string pool.
String pool -- пул, в котором хранятся все определённые строки и если создаётся новая,
компилятор проверяет, есть ли её значение в пуле, если есть,
то вновь созданной присваивается ссылка на уже существующую,
таким образом экономится память.
Это безопасно, что разные String-и могут ссылаться на один объект,
потому что String -- immutable.
Чтобы добавить строку в пул, используется метод String.intern();
Строки созданные, как String s = "s"; добавляются в пул автоматически.

2. Почему String в Java является immutable?
1) Безопасность.
String широко используется , как параметр для многих классов Java,
в частности для открытия сетевых соединений, подключений к БД,
открытию файлов и пр. И если бы строка изменялась, то мы могли получить доступ к объекту (файлу например),
на который мы имеем право, затем изменить строку с именем (случайно или намеренно) и получить доступ уже к другому файлу.
Так же String используется в механизме загрузки файлов, и это -- фундаментальный аспект.
И если бы строка изменялась, то запрос на загрузку "java.io.Writer" мог бы быть изменён на "DiskErasingWriter".
2) Hashcode
Из-за того, что строка не изменяется, она кэширует свой хэшкод и не вычисляет его каждый раз,
когда мы его вызываем, что делает строку очень быстрой как ключ для hashmap.
3) Многопоточность
immutable делает экземпляры строк thread-safe.

