Достоинства:
• Возможность создания нескольких потоков обработки.
Приостановка одного потока по любой причине не влияет на обработку остальных потоков,
если не были использованы инструменты межпотокового взаимодействия.
Инструменты межпотокового взаимодействия – такие как семафоры, шлюзы – ограничивают многопоточность.
Есть инструменты синхронизации и разделения данных между потоками.

Недостатки:
• Усилия разработчика на реализацию многопоточности.
• Использование программно-аппаратных ресурсов на поддержание многопоточности – переключение между потоками.

Выводы:
В некоторых случаях целесообразность использования многопоточности не вызывает сомнений.
В некоторых случаях использование многопоточности – это вопрос удобства.
Иногда достаточно и необходимо использовать только один поток.

Если с первым и третьим случаем все просто, то в случае возможности выбора следует рассмотреть оба варианта. И тогда возникают вопросы:
• Превосходит ли удобство от использования многопоточности затрат разработчика на её создание?
• Не слижают ли программно-аппаратные затраты на переключение между потоками производительность настолько,
что обработка становится неэффективной?

Ответы на эти вопросы определяют использование многопоточности в каждом конкретном случае.