Deadlock (взаимная блокировка) - состояние, при котором несколько потоков находятся в режиме ожидания ресурсов,
занятых этими потоками.
Работа потоков приостанавливается и программа "зависает".

Пример: Объект А содержит метод "проверить объект Б", объект Б содержит метод "проверить объект А".
Оба метода синхронизированы и перед началом работы также пытаются синхронизироваться по объекту,
который нужно проверить.
Поток 1 вызывает метод объекта А, получая блокировку по объекту А;
в этот же самый момент поток 2 вызывает метод объекта Б, получая блокировку по нему.
Оба метода пытаются получить блокировку по другому объекту и входят в режим ожидания.
Оба потока останавливаются. Deadlock.

Главный способ борьбы со взаимной блокировкой - синхронизация по объектам в одном и том же порядке.
Оба потока должны в первую очередь проверять один и тот же объект.

В нашем примере: можно переписать метод в объекте Б так, чтобы он сам не был синхронизированным,
в начале работы получал блокировку по объекту А,
а уже потом по объекту Б.
Тогда второй поток встанет в ожидание ещё до вызова метода и работа завершится успешно.