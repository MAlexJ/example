package example_00;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Регулярные выражения (англ. regular expressions) — формальный язык поиска
 * и осуществления манипуляций с подстроками в тексте, основанный на
 * использовании метасимволов (символов-джокеров, англ. wildcard characters).
 *
 *  Метасимволы
 *
    Примеры основных метасимволов:
 ^     -  начало проверяемой строки
 $     -  конец проверяемой строки
 .     -  представляет собой сокращенную форму записи для символьного класса, совпадающего с любым символом
 |     -  означает «или». Подвыражения, объединенные этим способом, называются альтернативами (alternatives)
 ?     -  означает, что предшествующий ему символ является необязательным
 +     -  обозначает «один или несколько экземпляров непосредственно предшествующего элемента
 *     –  любое количество экземпляров элемента (в том числе и нулевое)
 \\d   –  цифровой символ
 \\D   –  не цифровой символ
 \\s   –  пробельный символ
 \\S   –  не пробельный символ
 \\w   –  буквенный или цифровой символ или знак подчёркивания
 \\W   –  любой символ, кроме буквенного или цифрового символа или знака подчёркивания

 */

/**
 * Символьные классы

 Символьный класс - определяет перечень символов которые могут быть (или НЕ могут)
 на месте данного символа.

 Символьный класс соответствует одиночному символу обрабатываемой строки,
 причем сам символ должен содержаться в наборе, определяемым классом.
 К примеру, символьный класс [aeiou] соответствует любой гласной букве
 в нижнем регистре(Это будет только одна буква из перечня).
 */

/**
 * Квантификаторы
 *
  Регулярные выражения предоставляют инструменты позволяющие указать сколько раз может повторятся один или несколько символов. С некоторыми мы уже встречались:

 +     - Одно или более
 *     - Ноль или более
 ?     - Ноль или одно
 {n}   - Ровно n раз
 {m,n} - От m до n включительно
 {m,}  - Не менее m
 {,n}  - Не более n

 Теперь мы можем полностью понять регулярное выражение: "^[a-z0-9_-]{3,15}$" .
 Разберем её по кусочкам:
 ^ - начало строки
 [a-z0-9_-] - символ который может быть маленькой латинской буквой или цифрой или символом подчеркивания.
 {3,15} - предыдущий объект(смотри выше) может повторяться от 3х до 15раз.

 * */

public class Example_01 {

    public static void main(String[] args) {

        // ****  1  ******
//        String string = "aAd";
//        Pattern pt = Pattern.compile("[a-z][A-Z][a-z]");

        // ****  2  ******
//        String string = "K";
//        Pattern pt = Pattern.compile("[a-zA-Z]");

        // ****  3  ******
//        String string = "Kd";
//        Pattern pt = Pattern.compile("[a-zA-Z]{2}");

        // ****  4  ******
//        String string = "Kd";
//        Pattern pt = Pattern.compile("[a-zA-Z]{1,2}");

        // ****  5  ******
        String string = "123123535123.5";
        Pattern pt = Pattern.compile("[0-9|.]+");

        // ****  6  ******
//        String string = "AvKd81";
//        Pattern pt = Pattern.compile("[a-zA-Z0-9&&[^f0]]{0,10}");

        // ****  7  ******
//        String string = "AvKd81 ";
//        Pattern pt = Pattern.compile("[a-zA-Z0-9&&[^f0]]{0,10}[\\s]");

        // ****  8  ******
//        String string = "AvKd81_";
//        Pattern pt = Pattern.compile("\\w*");

        // ****  9  ******
//        String string = "AvKd81_";
//        Pattern pt = Pattern.compile("^A.*\\w$");


        Matcher mt = pt.matcher(string);
        boolean flag = mt.matches();

        System.out.println(flag);

    }

}
