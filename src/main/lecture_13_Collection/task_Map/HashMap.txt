 Механизм добавления элемента в HashMap

 HashMap — основан на хэш-таблицах, реализует интерфейс Map (что подразумевает хранение данных в виде пар ключ/значение).
 Ключи и значения могут быть любых типов, в том числе и null.

 При добавлении элемента, последовательность шагов следующая:
 1) Сначала ключ проверяется на равенство null.
 Если это проверка вернула true, будет вызван метод putForNullKey(value)

 2). Далее генерируется хэш на основе ключа.
 Для генерации используется метод hash(hashCode), в который передается key.hashCode().

 static int hash(int h){
    h ^= (h >>> 20) ^ (h >>> 12);
    return h ^ (h >>> 7) ^ (h >>> 4);
 }

 Комментарий из исходников объясняет, каких результатов стоит ожидать — метод hash(key)
 гарантирует что полученные хэш-коды, будут иметь только ограниченное
 количество коллизий (примерно 8, при дефолтном значении коэффициента загрузки).

 3) С помощью метода indexFor(hash, tableLength), определяется позиция в массиве,
 куда будет помещен элемент.

 static int indexFor(int h, int length){
    return h & (length - 1);
 }

4) Теперь, зная индекс в массиве, мы получаем список (цепочку) элементов,
 привязанных к этой ячейке. Хэш и ключ нового элемента поочередно сравниваются
 с хэшами и ключами элементов из списка и, при совпадении этих параметров,
 значение элемента перезаписывается.

 if (e.hash == hash && (e.key == key || key.equals(e.key))){
    V oldValue = e.value;
    e.value = value;

    return oldValue;
 }

5) Если же предыдущий шаг не выявил совпадений, будет вызван метод addEntry(hash, key, value, index)
для добавления нового элемента.

Как было сказано выше, если при добавлении элемента в качестве ключа был передан null,
действия будут отличаться. Будет вызван метод putForNullKey(value),
внутри которого нет вызова методов hash() и indexFor() (потому как все элементы с null-ключами всегда помещаются в table[0]),
 но есть такие действия:

-) Все элементы цепочки, привязанные к table[0], поочередно просматриваются в поисках элемента с ключом null.
Если такой элемент в цепочке существует, его значение перезаписывается.

-) Если элемент с ключом null не был найден, будет вызван уже знакомый метод addEntry().
      addEntry(0, null, value, 0);
 Kогда при добавлении элемента возникает коллизия, новый элемент добавляется в начало цепочки.

